name: Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        default: true
        description: Is this a pre-release version?
        required: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: bundle channel
        id: bundle_channel
        run: |
          if [ "${{ github.event.inputs.prerelease }}" == "true" ]; then
            echo "::set-output name=channel::alpha"
          else
            echo "::set-output name=channel::stable"
          fi
        shell: bash
      - name: Conventional Changelog Action
        id: version
        uses: TriPSs/conventional-changelog-action@v3
        with:
          release-count: '1'
          skip-version-file: 'true'
          skip-commit: 'true'
          skip-pull: 'true'
          git-push: 'true'
          git-path: ". '!:labsdk'"
          tag-prefix: 'v'
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: Build project
        run: |
          make generate bundle installer build \
            VERSION=${{ steps.version.outputs.version }} \
            BUNDLE_VERSION=${{ steps.version.outputs.tag }} \
            CHANNELS=${{ steps.bundle_channel.outputs.channel }} \
            ENV=prod
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata - Core
        id: meta_core
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-core
          tags: type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
      - name: Extract metadata - Historian
        id: meta_historian
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-historian
          tags: type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
      - name: Extract metadata - Bundle
        id: meta_bundle
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bundle
          tags: type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
      - name: Extract metadata - Runtime
        id: meta_runtime
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-runtime
          tags: type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
      - name: Build & Push - Historian
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hack/release.Dockerfile
          target: historian
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_historian.outputs.tags }}
          labels: ${{ steps.meta_historian.outputs.labels }}
      - name: Build & Push - Core
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hack/release.Dockerfile
          target: core
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_core.outputs.tags }}
          labels: ${{ steps.meta_core.outputs.labels }}
      - name: Build & Push - Runtime
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hack/release.Dockerfile
          target: runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_runtime.outputs.tags }}
          labels: ${{ steps.meta_runtime.outputs.labels }}
      - name: Build & Push - Bundle
        uses: docker/build-push-action@v2
        with:
          context: .
          file: bundle.Dockerfile
          target: bundle
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_bundle.outputs.tags }}
          labels: ${{ steps.meta_bundle.outputs.labels }}
      - name: Update changelog
        shell: bash
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          echo -e "{{ needs.version.outputs.changelog }}\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore(release): ${{ needs.version.outputs.version }}" CHANGELOG.md
          git push
      - name: Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.version.outputs.tag }}',
              sha: context.sha
            })
      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version.outputs.tag }}
          files: |
            installer.sh
          body: |
            ${{ needs.version.outputs.clean_changelog }}
          prerelease: ${{ inputs.prerelease }}
          name: Version ${{ needs.version.outputs.version }}
          generate_release_notes: false