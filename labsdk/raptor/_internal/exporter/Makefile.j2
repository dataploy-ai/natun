# This file is generated by Raptor's LabSDK. Do not edit it directly.
# Generated at {{ now() }}
#
# Makefile utility for deploy Raptor artifacts to Kubernetes

MODEL_IMAGE_REPO_URI?=localhost

##@ General

.PHONY: help
help: _print_banner ## Display this help.
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

.PHONY: _print_banner
_print_banner:
	@printf '%b\n' "\033[38;5;97m                    █▀"
	@printf '%b\n' "\033[38;5;97m                  █▀  █▀"
	@printf '%b\n' "\033[38;5;97m▄               ██▀ ▄█▀  ▄"
	@printf '%b\n' "\033[38;5;97m █▄▄           ██▀ ▄█▀ ▄█▀"
	@printf '%b\n' "\033[38;5;97m   ▀▀██████████▄ █ ▄▄█▀"
	@printf '%b\n' "\033[38;5;97m    █▄        ███ █▀                                 ▄"
	@printf '%b\n' "\033[38;5;97m    ███      ███ ▀                                ▂▄██"
	@printf '%b\n' "\033[38;5;97m    ███     ████     ▄██▀▀▀████   ██ ▄█▀▀▀▀█▄    ▀███▀▀▀▀   ▄███▀▀▀███▄   █ ▄█▀▀▀▀"
	@printf '%b\n' "\033[38;5;97m    ███████████▎   ▄██▀     ▀██   ██▀      ▀██▄   ███      ███       ██▌  ██▀"
	@printf '%b\n' "\033[38;5;97m    ███     ▀███   ██▌      ▄██   ██▌       ██▀   ██       ██        ██   ██"
	@printf '%b\n' "\033[38;5;97m    ███      ▐██▄  ▀██▄   ▄▀███   ███     ▄██▀    ███       ███     ██    █▌"
	@printf '%b\n' "\033[38;5;97m    ███       ███▄   ▀▀██▀▀  ██   ███▀▀▀▀▀▀       ▀███▀       ▀████▀      █"
	@printf '%b\n' "\033[38;5;97m                                  ██▌"
	@printf '%b\n' "\033[38;5;97m                                  █▀"
	@printf '%b\n' "\033[0m"


##@ Helpers

.PHONY: show-envs
show-envs: _print_banner ## Show all environment variables that are available for configuring the generated YAML manifests
	@printf '%b\n' "The generated YAML manifests are configured using environment variables."
	@printf '%b\n' "You should set them before running the make commands."
	@printf '%b\n' ""
	@printf '%b\n' "\033[31mAvailable environment variables:\033[0m"
	{% for env, desc in envs.items() %}
	@printf '%b\n' "\033[36m{{env}}\033[0m: {{desc}}"
	{%- endfor %}


##@ All

.PHONY: all
all: _print_banner docker-build-models docker-push-models deploy ## Build docker images for all models, push them to the docker repository and deploy all data-sources, features and models to Kubernetes
	@echo "Raptor resources deployed successfully"

deploy: _print_banner deploy-dsrcs deploy-features deploy-models ## Deploy all data-sources, features and models to Kubernetes
	@echo "Models and features deployed successfully"


##@ Data Sources

.PHONY: deploy-dsrcs
deploy-dsrcs: _print_banner {%for fqn in sources.keys()%}deploy-dsrc-{{fqn|targetize}}{%endfor%} ## Deploy all data-sources to Kubernetes
	@echo "Data sources deployed successfully"

{% for fqn, dsrc in sources.items() %}
.PHONY: deploy-dsrc-{{fqn|targetize}}
deploy-dsrc-{{fqn|targetize}}: _print_banner ## Deploy {{fqn}} to Kubernetes
	envsubst < {{dsrc.manifest_filename()}} | kubectl apply -f -
	@echo "  → {{fqn}}: Deployed successfully"
{% endfor %}


##@ Features

.PHONY: deploy-features
deploy-features: _print_banner {%for fqn in features.keys()%}deploy-feat-{{fqn|targetize}}{%endfor%} ## Deploy all features to Kubernetes
	@echo "Features deployed successfully"

{% for fqn, feat in features.items() %}
.PHONY: deploy-feat-{{fqn|targetize}}
deploy-feat-{{fqn|targetize}}: _print_banner ## Deploy {{fqn}} to Kubernetes
	envsubst < {{feat.manifest_filename()}} | kubectl apply -f -
	@echo "  → {{fqn}}: Deployed successfully"
{% endfor %}


##@ Models

.PHONY: deploy-models
deploy-models: _print_banner {%for fqn in models.keys()%}deploy-model-{{fqn|targetize}}{%endfor%} ## Deploy all models to Kubernetes
	@echo "Models deployed successfully"

.PHONY: docker-build
docker-build-models: _print_banner {%for fqn in models.keys()%}docker-build-model-{{fqn|targetize}}{%endfor%} ## Build docker images for all models
	@echo "Docker images built successfully"

.PHONY: docker-push
docker-push-models: _print_banner {%for fqn in models.keys()%}docker-push-model-{{fqn|targetize}}{%endfor%} ## Push docker images for all models
	@echo "Docker images pushed successfully"

{% for fqn, model in models.items() %}
.PHONY: docker-build-model-{{fqn|targetize}}
docker-build-model-{{fqn|targetize}}: _print_banner ## Build docker image for {{fqn}}
	cd models/{{fqn}} && docker build -t {{model._model_image}} -t ${MODEL_IMAGE_REPO_URI}/{{model._model_image}} -f env/docker/Dockerfile .
	@echo "  → {{fqn}}: Docker image built successfully"

.PHONY: docker-push-model-{{fqn|targetize}}
docker-push-model-{{fqn|targetize}}: _print_banner ## Push docker image for {{fqn}}
	docker push ${MODEL_IMAGE_REPO_URI}/{{model._model_image}}
	@echo "  → {{fqn}}: Docker image pushed successfully"

.PHONY: deploy-model-{{fqn|targetize}}
deploy-model-{{fqn|targetize}}: _print_banner ## Deploy {{fqn}} to Kubernetes
	envsubst < {{model.manifest_filename()}} | kubectl apply -f -
	@echo "  → {{fqn}}: Deployed successfully"
{% endfor %}
